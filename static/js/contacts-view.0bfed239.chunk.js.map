{"version":3,"file":"static/js/contacts-view.0bfed239.chunk.js","mappings":"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","sources":["utils/motionVar.js","redux/contacts/contacts-selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","redux/contacts/contacts-operations.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://goit-react-hw-08-phonebook/./src/views/ContactsView/ContactsView.module.css?919f","views/ContactsView/ContactsView.js"],"sourcesContent":["export const variants = {\n  initial: { scale: 0 },\n  animate: { scale: 1 },\n  exit: { scale: 0 },\n  transition: { ease: 'easeOut', duration: 0.3 },\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"info\":\"ContactList_info__ndqPX\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { variants } from '../../utils/motionVar';\nimport s from './ContactList.module.css';\n\nfunction ContactList() {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(contactsSelectors.getVisibleContacts);\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  return (\n    <>\n      {contacts.length > 0 && (\n        <motion.ul className={s.list}>\n          <AnimatePresence>\n            {visibleContacts.map(({ id, name, number }) => (\n              <motion.li\n                className={s.item}\n                key={id}\n                initial=\"initial\"\n                animate=\"animate\"\n                exit=\"exit\"\n                transition=\"transition\"\n                variants={variants}\n              >\n                <p className={s.info}>\n                  <b>{name}</b>\n                  <em>{number}</em>\n                </p>\n                <IconButton\n                  aria-label=\"delete\"\n                  color=\"secondary\"\n                  type=\"button\"\n                  onClick={() => dispatch(contactsOperations.deleteContact(id))}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </motion.li>\n            ))}\n          </AnimatePresence>\n        </motion.ul>\n      )}\n\n      {!contacts.length && (\n        <AnimatePresence>\n          <motion.p\n            initial=\"initial\"\n            animate=\"animate\"\n            exit=\"exit\"\n            transition=\"transition\"\n            variants={variants}\n          >\n            Your phonebook is empty. Please add contact.\n          </motion.p>\n        </AnimatePresence>\n      )}\n    </>\n  );\n}\n\nexport default ContactList;\n","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\nimport { toast } from 'react-toastify';\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => {\n      dispatch(fetchContactsError(error));\n\n      if (error.response.status === 404) {\n        toast.info(\"There is no such user's collection!\");\n      } else if (error.response.status === 500) {\n        toast.error('Oops! Server error! Please try later!');\n      } else {\n        toast.error('Something went wrong! Please reload the page!');\n      }\n    });\n};\n\nexport const addContact = (name, number) => dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => {\n      dispatch(addContactError(error));\n\n      if (error.response.status === 400) {\n        toast.error('Contact creation error!');\n      } else {\n        toast.error('Something went wrong! Please reload the page!');\n      }\n    });\n};\n\nexport const deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => {\n      dispatch(deleteContactError(error));\n\n      if (error.response.status === 404) {\n        toast.info(\"There is no such user's collection!\");\n      } else if (error.response.status === 500) {\n        toast.error('Oops! Server error! Please try later!');\n      } else {\n        toast.error('Something went wrong! Please reload the page!');\n      }\n    });\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport { toast } from 'react-toastify';\nimport { NumericFormat } from 'react-number-format';\nimport Button from '@mui/material/Button';\nimport LoaderComponent from '../LoaderComponent';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const isLoading = useSelector(contactsSelectors.getLoading);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const checkRepeatName = name => {\n    return contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n  };\n\n  const checkRepeatNumber = number => {\n    return contacts.find(contact => contact.number === number);\n  };\n\n  const checkEmptyQuery = (name, number) => {\n    return name.trim() === '' || number.trim() === '';\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (checkRepeatName(name)) {\n      return toast(`🤔 ${name} is already in the phonebook.`);\n    } else if (checkRepeatNumber(number)) {\n      return toast(`🤔 ${number} is already in the phonebook.`);\n    } else if (checkEmptyQuery(name, number)) {\n      return toast.info(\"😱 Enter the contact's name and number phone!\");\n    } else {\n      dispatch(contactsOperations.addContact(name, number));\n    }\n    resetInput();\n  };\n\n  const resetInput = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Enter name\"\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <NumericFormat\n          placeholder=\"Enter phone number\"\n          format=\"(###) ###-##-##\"\n          mask=\"_\"\n          pattern=\"^[0-9\\s\\(\\)\\-]{15}\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          className={s.input}\n        />\n      </label>\n\n      {!isLoading && (\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"large\"\n          type=\"submit\"\n        >\n          Add contact\n        </Button>\n      )}\n\n      {isLoading && <LoaderComponent />}\n    </form>\n  );\n}\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsActions, contactsSelectors } from '../../redux/contacts';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { variants } from '../../utils/motionVar';\nimport s from './Filter.module.css';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(contactsSelectors.getFilter);\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  return (\n    <>\n      {contacts.length > 0 && (\n        <AnimatePresence>\n          <label className={s.label}>\n            <motion.input\n              initial=\"initial\"\n              animate=\"animate\"\n              exit=\"exit\"\n              transition=\"transition\"\n              variants={variants}\n              className={s.input}\n              type=\"text\"\n              value={filter}\n              onChange={e =>\n                dispatch(contactsActions.filterContact(e.target.value))\n              }\n            />\n          </label>\n        </AnimatePresence>\n      )}\n    </>\n  );\n}\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactsView_wrapper__6KPQm\"};","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport ContactList from '../../components/ContactList/ContactList';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport Filter from '../../components/Filter/Filter';\nimport { contactsOperations } from '../../redux/contacts/';\nimport s from './ContactsView.module.css';\n\nexport default function ContactsView() {\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  return (\n    <div className={s.wrapper}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["variants","initial","scale","animate","exit","transition","ease","duration","getContacts","state","contacts","items","getLoading","isLoading","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","dispatch","useDispatch","visibleContacts","useSelector","contactsSelectors","length","motion","className","s","AnimatePresence","map","id","number","IconButton","color","type","onClick","contactId","deleteContactRequest","axios","then","deleteContactSuccess","catch","error","deleteContactError","response","status","toast","Delete","useState","setName","setNumber","handleChange","e","target","value","resetInput","onSubmit","preventDefault","find","contact","checkRepeatName","checkRepeatNumber","trim","checkEmptyQuery","addContactRequest","data","addContactSuccess","addContactError","contactsOperations","onChange","placeholder","format","mask","pattern","Button","variant","size","LoaderComponent","contactsActions","ContactsView","useEffect","fetchContactsRequest","fetchContactsSuccess","fetchContactsError"],"sourceRoot":""}