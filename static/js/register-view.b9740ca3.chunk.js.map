{"version":3,"file":"static/js/register-view.b9740ca3.chunk.js","mappings":"sRACA,EAAuB,2BAAvB,EAA8D,gC,SCS/C,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAC9B,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MAEd,OAAQT,GACN,IAAK,OACH,OAAOC,EAAQQ,GACjB,IAAK,QACH,OAAON,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,OAEL,EAeD,OACE,kBAAMC,SAda,SAAAH,GAEnB,OADAA,EAAEI,iBACkB,KAAhBX,EAAKY,QAAkC,KAAjBV,EAAMU,QAAqC,KAApBR,EAASQ,OACjDC,EAAAA,GAAAA,MAAY,2CACVT,EAASU,OAAS,EACpBD,EAAAA,GAAAA,KAAW,kDAEpBnB,EAASqB,EAAAA,eAAAA,SAAwB,CAAEf,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAChDH,EAAQ,IACRE,EAAS,SACTE,EAAY,IACb,EAG+BW,UAAWC,EAAQC,aAAa,MAA9D,WACE,SAACC,EAAA,EAAD,CACEC,MAAM,OACNC,QAAQ,WACRC,MAAM,YACNC,KAAK,OACLvB,KAAK,OACLS,MAAOT,EACPwB,SAAUlB,EACVU,UAAWC,KAGb,SAACE,EAAA,EAAD,CACEC,MAAM,QACNC,QAAQ,WACRC,MAAM,YACNC,KAAK,QACLvB,KAAK,QACLS,MAAOP,EACPsB,SAAUlB,EACVU,UAAWC,KAGb,SAACE,EAAA,EAAD,CACEC,MAAM,WACNC,QAAQ,WACRC,MAAM,YACNC,KAAK,WACLvB,KAAK,WACLS,MAAOL,EACPoB,SAAUlB,EACVU,UAAWC,KAGXrB,IACA,SAAC6B,EAAA,EAAD,CACEJ,QAAQ,YACRC,MAAM,YACNI,KAAK,QACLH,KAAK,SAJP,qBAUD3B,IAAa,SAAC+B,EAAA,EAAD,MAGnB,C","sources":["webpack://goit-react-hw-08-phonebook/./src/views/RegisterView/RegisterView.module.css?6d4e","views/RegisterView/RegisterView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterView_form__q9n4X\",\"textField\":\"RegisterView_textField__9HzQG\"};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { authOperations } from '../../redux/auth/auth-operations';\nimport { authSelectors } from '../../redux/auth/auth-selectors';\nimport { toast } from 'react-toastify';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport LoaderComponent from '../../components/LoaderComponent/LoaderComponent';\nimport s from './RegisterView.module.css';\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(authSelectors.getIsLoggedIn);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name.trim() === '' || email.trim() === '' || password.trim() === '') {\n      return toast.error('ðŸ’© Please fill in all fields!');\n    } else if (password.length < 7) {\n      return toast.info('Passwords must be at least 7 characters long!');\n    }\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form} autoComplete=\"off\">\n      <TextField\n        label=\"Name\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n        className={s.textField}\n      />\n\n      <TextField\n        label=\"Email\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        type=\"email\"\n        name=\"email\"\n        value={email}\n        onChange={handleChange}\n        className={s.textField}\n      />\n\n      <TextField\n        label=\"Password\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={handleChange}\n        className={s.textField}\n      />\n\n      {!isLoading && (\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"large\"\n          type=\"submit\"\n        >\n          Sign up\n        </Button>\n      )}\n\n      {isLoading && <LoaderComponent />}\n    </form>\n  );\n}\n"],"names":["RegisterView","dispatch","useDispatch","isLoading","useSelector","authSelectors","useState","name","setName","email","setEmail","password","setPassword","handleChange","e","target","value","onSubmit","preventDefault","trim","toast","length","authOperations","className","s","autoComplete","TextField","label","variant","color","type","onChange","Button","size","LoaderComponent"],"sourceRoot":""}